buildscript {
  ext.kotlin_version = '1.3.72'
  repositories {
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:4.0.0'
    classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'hugo'

allprojects {
  repositories {
    google()
    jcenter()
  }
}
dependencies {
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'

  implementation 'com.google.dagger:dagger-android:2.28.1'
  implementation 'com.google.dagger:dagger-android-support:2.28.1' // if you use the support libraries
  annotationProcessor 'com.google.dagger:dagger-compiler:2.28.1'
//  annotationProcessor 'com.google.dagger:dagger-android-processor:2.28.1'
  compileOnly 'org.glassfish:javax.annotation:10.0-b28'

  implementation 'com.squareup.okhttp:okhttp:1.3.0'
  implementation 'com.squareup.picasso:picasso:2.2.0'
  implementation 'com.squareup.retrofit:retrofit:1.4.1'
  debugImplementation 'com.squareup.retrofit:retrofit-mock:1.4.1'

  implementation 'com.jakewharton:butterknife:6.0.0'
  implementation 'com.jakewharton.timber:timber:2.2.2'
  debugImplementation 'com.jakewharton.madge:madge:1.1.1'
  debugImplementation 'com.jakewharton.scalpel:scalpel:1.1.1'

  implementation 'com.netflix.rxjava:rxjava-core:0.16.1'
  implementation 'com.netflix.rxjava:rxjava-android:0.16.1'

  implementation 'com.etsy.android.grid:library:1.0.3'
  implementation "androidx.core:core-ktx:1.3.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.3"

  dexOptions {
    // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
    preDexLibraries = preDexEnabled && !isTravis
  }

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 21

    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
  }

  buildTypes {
    debug {
      applicationIdSuffix '.dev'
      versionNameSuffix '-dev'
    }
  }

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}
repositories {
  mavenCentral()
}
